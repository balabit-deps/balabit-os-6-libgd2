From c613bc169802bb4b639ee2e15c61b25b80a88424 Mon Sep 17 00:00:00 2001
From: "Christoph M. Becker" <cmbecker69@gmx.de>
Date: Thu, 10 Aug 2017 18:31:29 +0200
Subject: [PATCH] Close #339: Fix unitialized memory read vulnerability in GIF
 reading

The stack allocated color map buffers were not zeroed before usage, and
so undefined palette indexes could cause information leakage.

This issue has been reported by Matviy Kotoniy to security@libgd.org in
<CAKm_7a-AO++B6cXYWM_DtycPENG5WNWK7NSEvQ5OmZziMY_JyA@mail.gmail.com>.
---
 src/gd_gif_in.c                       |  3 +++
 tests/Makefile.am                     |  1 +
 tests/gif/CMakeLists.txt              |  1 +
 tests/gif/uninitialized_memory_read.c | 50 +++++++++++++++++++++++++++++++++++
 4 files changed, 55 insertions(+)
 create mode 100644 tests/gif/uninitialized_memory_read.c

diff --git a/src/gd_gif_in.c b/src/gd_gif_in.c
index 3ae74de..28c5aef 100644
--- a/src/gd_gif_in.c
+++ b/src/gd_gif_in.c
@@ -210,6 +210,9 @@ BGD_DECLARE(gdImagePtr) gdImageCreateFromGifCtx(gdIOCtxPtr fd)
 
 	gdImagePtr im = 0;
 
+	memset(ColorMap, 0, 3 * MAXCOLORMAPSIZE);
+	memset(localColorMap, 0, 3 * MAXCOLORMAPSIZE);
+
 	if(!ReadOK(fd, buf, 6)) {
 		return 0;
 	}
diff --git a/tests/Makefile.am b/tests/Makefile.am
index c16e95f..e94caf3 100644
--- a/tests/Makefile.am
+++ b/tests/Makefile.am
@@ -27,6 +27,7 @@ check_PROGRAMS = \
 	gdimagecolortransparent/gdimagecolortransparent \
 	gif/bug00005_2 \
 	gif/gif_null \
+	gif/uninitialized_memory_read \
 	gif/bug00181 \
 	gif/bug00227 \
 	bmp/bmp_null \
diff --git a/tests/gif/CMakeLists.txt b/tests/gif/CMakeLists.txt
index a64f785..54a8cd9 100644
--- a/tests/gif/CMakeLists.txt
+++ b/tests/gif/CMakeLists.txt
@@ -9,6 +9,7 @@ SET(TESTS_FILES
 	bug00066
 	bug00181
 	bug00227
+	uninititalized_memory_read
 )
 
 FOREACH(test_name ${TESTS_FILES})
diff --git a/tests/gif/uninitialized_memory_read.c b/tests/gif/uninitialized_memory_read.c
new file mode 100644
index 0000000..b7852da
--- /dev/null
+++ b/tests/gif/uninitialized_memory_read.c
@@ -0,0 +1,50 @@
+/**
+ * Test for uninitialized color map entries
+ *
+ * We're reading a crafted GIF which consists of 16x16 color blocks and which
+ * has only two palette entries in the global color map, but uses other palette
+ * indexes as well. We verify whether all undefined palette indexes produce the
+ * color black.
+ *
+ * See also <CAKm_7a-AO++B6cXYWM_DtycPENG5WNWK7NSEvQ5OmZziMY_JyA@mail.gmail.com>
+ * which had been sent to security@libgd.org.
+ */
+
+
+#include "gd.h"
+#include "gdtest.h"
+
+
+int main()
+{
+    gdImagePtr im;
+    FILE *fp;
+    int i, j, col;
+    char path[1024];
+
+    sprintf(path, "%s/gif/unitialized_memory_read.gif", GDTEST_TOP_DIR);
+    fp = fopen(path, "rb");
+
+    if (!fp) {
+	    printf("cannot open <%s>\n", path);
+	    return -1;
+    }
+
+    gdTestAssert(fp != NULL);
+    im = gdImageCreateFromGif(fp);
+    gdTestAssert(im != NULL);
+    fclose(fp);
+
+    for (i = 0; i < gdImageSX(im); i += 16) {
+        for (j = 0; j < gdImageSY(im); j += 16) {
+            if (gdImageGetPixel(im, i, j) >= 2) {
+                col = gdImageGetTrueColorPixel(im, i, j);
+                gdTestAssertMsg(col == 0, "(%d,%d): expected color 0, but got %d\n", i, j, col);
+            }
+        }
+    }
+
+    gdImageDestroy(im);
+
+    return gdNumFailures();
+}
-- 
2.7.4

