From fb0e0cce0b9f25389ab56604c3547351617e1415 Mon Sep 17 00:00:00 2001
From: "Christoph M. Becker" <cmbecker69@gmx.de>
Date: Tue, 16 Aug 2016 16:26:19 +0200
Subject: [PATCH] Fix OOB reads of the TGA decompression buffer

It is possible to craft TGA files which will overflow the decompression
buffer, but not the image's bitmap. Therefore we augment the check for the
bitmap's overflow with a check for the buffer's overflow.

This issue had been reported by Ibrahim El-Sayed to security@libgd.org.

CVE-2016-6906
---
 src/gd_tga.c                |   6 ++++--
 tests/tga/.gitignore        |   1 +
 tests/tga/CMakeLists.txt    |   1 +
 tests/tga/Makemodule.am     |   2 ++
 tests/tga/heap_overflow.c   |  51 ++++++++++++++++++++++++++++++++++++++++++++
 tests/tga/heap_overflow.tga | Bin 0 -> 605 bytes
 6 files changed, 59 insertions(+), 2 deletions(-)
 create mode 100644 tests/tga/heap_overflow.c
 create mode 100644 tests/tga/heap_overflow.tga

Index: libgd2-2.1.1/src/gd_tga.c
===================================================================
--- libgd2-2.1.1.orig/src/gd_tga.c	2017-02-28 10:23:46.273621175 -0500
+++ libgd2-2.1.1/src/gd_tga.c	2017-02-28 10:23:46.269621129 -0500
@@ -296,7 +296,8 @@
 				encoded_pixels = ( ( decompression_buffer[ buffer_caret ] & ~TGA_RLE_FLAG ) + 1 );
 				buffer_caret++;
 
-				if ((bitmap_caret + (encoded_pixels * pixel_block_size)) > image_block_size) {
+				if ((bitmap_caret + (encoded_pixels * pixel_block_size)) > image_block_size
+						|| buffer_caret + pixel_block_size > rle_size) {
 					gdFree( decompression_buffer );
 					gdFree( conversion_buffer );
 					return -1;
@@ -312,7 +313,8 @@
 				encoded_pixels = decompression_buffer[ buffer_caret ] + 1;
 				buffer_caret++;
 
-				if ((bitmap_caret + (encoded_pixels * pixel_block_size)) > image_block_size) {
+				if ((bitmap_caret + (encoded_pixels * pixel_block_size)) > image_block_size
+						|| buffer_caret + (encoded_pixels * pixel_block_size) > rle_size) {
 					gdFree( decompression_buffer );
 					gdFree( conversion_buffer );
 					return -1;
