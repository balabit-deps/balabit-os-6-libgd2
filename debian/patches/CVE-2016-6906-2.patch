From 58b6dde319c301b0eae27d12e2a659e067d80558 Mon Sep 17 00:00:00 2001
From: "Christoph M. Becker" <cmbecker69@gmx.de>
Date: Tue, 16 Aug 2016 16:26:19 +0200
Subject: [PATCH] Fix OOB reads of the TGA decompression buffer

It is possible to craft TGA files which will overflow the decompression
buffer, but not the image's bitmap. Therefore we also have to check for
potential decompression buffer overflows.

This issue had been reported by Ibrahim El-Sayed to security@libgd.org;
a modified case exposing an off-by-one error of the first patch had been
provided by Konrad Beckmann.

This commit is an amendment to commit fb0e0cce, so we use CVE-2016-6906
as well.
---
 src/gd_tga.c                  |   8 +++++++-
 tests/tga/Makemodule.am       |   3 ++-
 tests/tga/heap_overflow.c     |  16 ++++++++++++----
 tests/tga/heap_overflow_1.tga | Bin 0 -> 605 bytes
 tests/tga/heap_overflow_2.tga | Bin 0 -> 8746 bytes
 5 files changed, 21 insertions(+), 6 deletions(-)
 create mode 100644 tests/tga/heap_overflow_1.tga
 create mode 100644 tests/tga/heap_overflow_2.tga

Index: libgd2-2.1.1/src/gd_tga.c
===================================================================
--- libgd2-2.1.1.orig/src/gd_tga.c	2017-02-28 10:23:52.513694994 -0500
+++ libgd2-2.1.1/src/gd_tga.c	2017-02-28 10:23:52.509694946 -0500
@@ -291,7 +291,13 @@
 		buffer_caret = 0;
 
 		while( bitmap_caret < image_block_size ) {
-			
+
+			if (buffer_caret + pixel_block_size > rle_size) {
+				gdFree( decompression_buffer );
+				gdFree( conversion_buffer );
+				return -1;
+			}
+
 			if ((decompression_buffer[buffer_caret] & TGA_RLE_FLAG) == TGA_RLE_FLAG) {
 				encoded_pixels = ( ( decompression_buffer[ buffer_caret ] & ~TGA_RLE_FLAG ) + 1 );
 				buffer_caret++;
